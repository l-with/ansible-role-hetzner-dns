---

# prepare informations

- name: Gather dns zones
  ansible.builtin.uri:
    url: "{{ dns_api_url }}/zones"
    headers:
      Auth-API-Token: "{{ dns_api_token }}"
  delegate_to: localhost
  register: output

- name: Print dns zones
  ansible.builtin.debug:
    msg: "{{ output.json.zones }}"
  when: dns_debug

- name: Set fact _dns_zone_ids
  ansible.builtin.set_fact:
    _dns_zone_ids: "{{ output.json.zones | items2dict(key_name='name', value_name='id') }}"

- name: Print dns zone ids
  ansible.builtin.debug:
    msg: "{{ _dns_zone_ids }}"
  when: dns_debug

- name: Set fact _dns_zone_id of "{{ dns_zone_name }}"
  ansible.builtin.set_fact:
    _dns_zone_id: "{{ _dns_zone_ids[dns_zone_name] }}"

- name: Gather dns zone records of "{{ _dns_zone_id }}"
  ansible.builtin.uri:
    url: "{{ dns_api_url }}/records?zone_id={{ _dns_zone_id }}"
    headers:
      Auth-API-Token: "{{ dns_api_token }}"
  delegate_to: localhost
  register: output

- name: Print zone records of "{{ _dns_zone_id }}"
  ansible.builtin.debug:
    msg: "{{ output.json.records }}"
  when: dns_debug

- name: Set fact _dns_records for "{{ _dns_zone_id }}"
  ansible.builtin.set_fact:
    _dns_records: "{{ output.json.records }}"

- name: Print _dns_records for "{{ _dns_zone_id }}"
  ansible.builtin.debug:
    msg: "{{ _dns_records }}"
  when: dns_debug

# start handling dns record

- name: Set fact _dns_record_id for "{{ dns_record_name }}", "{{ dns_record_type }}"
  ansible.builtin.set_fact:
    _dns_record_id: "{{ _dns_records 
      | selectattr('name', 'equalto', dns_record_name)
      | selectattr('type', 'equalto', dns_record_type)
      | map(attribute='id')
      | list }}"

- name: Print number of elements in _dns_record_id
  ansible.builtin.debug:
    msg: "{{ _dns_record_id | length }}"
  when: dns_debug

- name: Set fact _dns_record_id_exact for "{{ dns_record_name }}", "{{ dns_record_type }}", "{{ dns_record_value }}"
  ansible.builtin.set_fact:
    _dns_record_id_exact: "{{ _dns_records 
      | selectattr('name', 'equalto', dns_record_name)
      | selectattr('type', 'equalto', dns_record_type)
      | selectattr('value', 'equalto', dns_record_value)
      | map(attribute='id')
      | list }}"

- name: Print _dns_record_id_exact for "{{ dns_record_name }}", "{{ dns_record_type }}", "{{ dns_record_value }}"
  ansible.builtin.debug:
    msg: "{{ _dns_record_id_exact }}"
  when: dns_debug

- name: Print number of elements in _dns_record_id_exact
  ansible.builtin.debug:
    msg: "{{ _dns_record_id_exact | length }}"
  when: dns_debug

- name: Print dns_record_delete
  ansible.builtin.debug:
    msg: "{{ dns_record_delete }}"
  when: dns_debug

- name: Print create dns record
  ansible.builtin.debug:
    msg: |
      Create dns record
        zone_id: "{{ _dns_zone_id }}"
        name: "{{ dns_record_name }}"
        type: "{{ dns_record_type }}"
        value: "{{ dns_record_value }}"
        ttl: "{{ dns_record_ttl }}"
  when: (_dns_record_id | length) <= 0
          and not dns_record_delete
          and dns_debug

- name: Create dns record
  ansible.builtin.uri:
    url: "{{ dns_api_url }}/records"
    body_format: json
    headers:
      Auth-API-Token: "{{ dns_api_token }}"
    method: post
    body:
      zone_id: "{{ _dns_zone_id }}"
      name: "{{ dns_record_name }}"
      type: "{{ dns_record_type }}"
      value: "{{ dns_record_value }}"
      ttl: "{{ dns_record_ttl }}"
  delegate_to: localhost
  when: (_dns_record_id | length) <= 0
          and not dns_record_delete
          and not dns_dry_run
  changed_when: true

- name: Print update dns record
  ansible.builtin.debug:
    msg: |
      Update dns record
        zone_id: "{{ _dns_zone_id }}"
        name: "{{ dns_record_name }}"
        type: "{{ dns_record_type }}"
        value: "{{ dns_record_value }}"
        ttl: "{{ dns_record_ttl }}"
  when: (_dns_record_id | length) == 1 
          and (_dns_record_id_exact | length) <= 0 
          and not dns_record_delete
          and dns_debug

- name: Update dns record
  ansible.builtin.uri:
    url: "{{ dns_api_url }}/records/{{ _dns_record_id[0] }}"
    body_format: json
    headers:
      Auth-API-Token: "{{ dns_api_token }}"
    method: put
    body:
      zone_id: "{{ _dns_zone_id }}"
      name: "{{ dns_record_name }}"
      type: "{{ dns_record_type }}"
      value: "{{ dns_record_value }}"
      ttl: "{{ dns_record_ttl }}"
  delegate_to: localhost
  when: (_dns_record_id | length) == 1 
          and (_dns_record_id_exact | length) <= 0 
          and not dns_record_delete
          and not dns_dry_run
  changed_when: true

- name: Print delete dns record
  ansible.builtin.debug:
    msg: |
      Delete dns record
        id: "{{ _dns_record_id[0] }}"
  when: (_dns_record_id | length) == 1 
          and (_dns_record_id_exact | length) == 1
          and dns_record_delete
          and dns_debug

- name: Delete dns record
  ansible.builtin.uri:
    url: "{{ dns_api_url }}/records/{{ _dns_record_id[0] }}"
    headers:
      Auth-API-Token: "{{ dns_api_token }}"
    method: delete
  delegate_to: localhost
  when: (_dns_record_id | length) == 1 
          and (_dns_record_id_exact | length) == 1
          and dns_record_delete
          and not dns_dry_run
  changed_when: true

- name: Fail dry run
  ansible.builtin.fail:
    msg: Fail dry run, to prevent continuing CI
  when: dns_dry_run and dns_dry_run_fail

...